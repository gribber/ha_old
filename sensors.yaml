- platform: yr
  #- platform: tellstick
  #only_named: 1
  #10: livingroom_upstairs
  #61: kitchen
  #62: guestroom
  #63: south_roof
  #64: north_roof
  #71: livingroom_downstairs
  #72: bedroom
  #73: garage
  #81: closet
  #82: hobbyroom

  #- platform: onewire
  #names:
  #  '28.473115060000': avluft
  #  '28.6D0115060000': uteluft
  #  '28.712515060000': franluft
  #  '28.C02B15060000': tilluft
  #  '28.085115060000': radiator_fram
  #  '28.F40215060000': radiator_ret
  #mount_dir: /mnt/1wire
  #
- platform: scrape
  name: Fiberstatus
  scan_interval: 300
  resource: https://www.servanet.se/anslut/johannedal
  select: ".paragraph .lastupdate.square"
  value_template: '{{ value.split("d:")[1] }}'

- platform: template
  sensors:
    garage_door_state:
      value_template: >-
        {% if is_state('switch.door_sensor_1', 'on') %}
          Open
        {% else %}
          Closed
        {% endif %}
      icon_template: >-
        {% if is_state('switch.door_sensor_1', 'on') %}
          mdi:garage-open
        {% else %}
          mdi:garage
        {% endif %}
      friendly_name: Garage door
    garage_port_state:
      value_template: >-
        {% if is_state('switch.door_sensor_2', 'on') %}
          Open
        {% else %}
          Closed
        {% endif %}
      icon_template: >-
        {% if is_state('switch.door_sensor_2', 'on') %}
          mdi:garage-open
        {% else %}
          mdi:garage
        {% endif %}
      friendly_name: Garage port

- platform: template
  sensors:
    heater_departuretime:
      friendly_name: 'Departure time'
      value_template: '{% if states.input_number.heater_hour.state|round(0)|string|length == 1 %}0{% endif %}{{ states.input_number.heater_hour.state|round(0)|string }}:{% if states.input_number.heater_minute.state|round(0)|string|length == 1 %}0{% endif %}{{ states.input_number.heater_minute.state|round(0)|string }}'

    heater_activationtime:
      friendly_name: 'Calculated activation time'
      value_template: >-
        {% set atime = (states.sensor.heater_temptime.state|round(0) * 60) %}
        {% if states.input_number.heater_hour.state|round(0)|string|length == 1 %} {% set time = 0 %} {% endif %}
        {% set time = time|string + states.input_number.heater_hour.state|round(0)|string + ':' %}
        {% if states.input_number.heater_minute.state|round(0)|string|length == 1 %} {% set time = time|string + '0' %} {% endif %}
        {% set time = time|string + states.input_number.heater_minute.state|round(0)|string %}
        {{ (as_timestamp(now().strftime("%Y-%m-%d") + ' ' + time) - atime) | timestamp_custom("%H:%M")|string }}

    heater_temptime:
      friendly_name: 'Temperature adjusted time'
      value_template: >-
        {% set temp = states.sensor.heater_forecast.state|int %}
        {% if temp <= -15 %} {% set t = 1 %}
        {% elif temp > 5 %} {% set t = 20 %}
        {% else %} {% set t = (15 + temp) %} {% endif %}
        {{ (states.input_number.heater_maxmin.state|round(0)/(t**0.3))|int }}

    heater_forecast:
      friendly_name: 'Temperature forecast'
      value_template: >-
        {% if states.sensor.time.state < states.sensor.heater_departuretime.state and states.sensor.time.state > '00:00' %}
        {% set forecast = states.weather.smhi_home.attributes.forecast[0].templow %}
        {% else %}
        {% set forecast = states.weather.smhi_home.attributes.temperature %}
        {% endif %}
        {{ forecast }}


- platform: fitbit
  monitored_resources:
    - "body/weight"
    - "body/bmi"
    - "body/fat"

- platform: time_date
  display_options:
    - 'time'

