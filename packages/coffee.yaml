# homeassistant:
#   customize:
#     sensor.coffee_state:
#       templates:
#         icon: mdi:coffee-maker
#         icon_color: >
#           if (state === 'off') return '';
#           if (state === 'heating') return 'rgb(59, 247, 81)';
#           if (state === 'making') return 'rgb(246, 255, 66)';
#           return 'rgb(235, 64, 52)';
counter:
  coffeecups_day:
    name: 'Koppar idag'
    icon: mdi:coffee
  coffeecups_week:
    name: 'Koppar den här veckan'
    icon: mdi:coffee
  coffeecups_month:
    name: 'Koppar den här månaden'
    icon: mdi:coffee
  coffeecups_total:
    name: 'Koppar totalt'
    icon: mdi:coffee

input_number:
  coffeecups_last:
    initial: 0
    min: 0
    max: 10
    name: 'Koppar senaste bryggningen'
    icon: mdi:coffee

sensor:
  - platform: template
    sensors:
      coffee_state:
        friendly_name: 'Coffee machine status'
        value_template: >-
          {% if states('sensor.sp120_coffee_power')|int < 1 %}
            off
          {% elif (states('sensor.sp120_coffee_power')|int > 30) and (states('sensor.sp120_coffee_power')|int < 200) %}
            heating
          {% elif (states('sensor.sp120_coffee_power')|int > 800) and (states('sensor.sp120_coffee_power')|int < 1600) %}
            making
          {% else %}
            unknown ({{ states('sensor.sp120_coffee_power') }}W)
          {% endif %}
        icon_template: >-
          {% if states('sensor.sp120_coffee_power')|int < 1 %}
            mdi:coffee-off
          {% elif (states('sensor.sp120_coffee_power')|int > 30) and (states('sensor.sp120_coffee_power')|int < 200) %}
            mdi:coffee-to-go
          {% elif (states('sensor.sp120_coffee_power')|int > 800) and (states('sensor.sp120_coffee_power')|int < 1600) %}
            mdi:coffee-maker
          {% else %}
            mdi:cloud-question
          {% endif %}
      
      coffee_filled:
        friendly_name: 'Machine preloaded'
        value_template: >-
          {% if states('binary_sensor.water_coffeemaker') == 'off' %}
            no
          {% else %}
            yes
          {% endif %}
        icon_template: >-
          {% if states('binary_sensor.water_coffeemaker') == 'off' %}
            mdi:gauge-empty
          {% else %}
            mdi:gauge-full
          {% endif %}

switch:
  - platform: mqtt
    name: 'Coffee maker switch'
    state_topic: 'coffeemaker/gpio/12'
    command_topic: 'coffeemaker/gpio/12'
    payload_on: '1'
    payload_off: '0'

input_datetime:
  coffee_start:
    name: 'Autostart at'
    has_time: true
    has_date: false

  coffee_brewing_start:
    name: 'Start of brewing'
    has_time: true
    has_date: true

input_boolean:
  coffee_autostart:
    name: 'Autostart if preloaded'

automation:
  - alias: 'coffee: coffee ready'
    id: 413e84c6-0ed4-47c1-b3c4-159c044d07e5
    trigger:
      platform: state
      entity_id: sensor.coffee_state
#      from: 'making'
      to: 'heating'
      for: '00:01:30' # takes some time before all coffee has passed thru the filter
    action:
      - service: notify.mobile_app_oneplus_8t
        data:
          title: "Kaffebryggaren"
          message: "{{ states('input_number.coffeecups_last')|int }} koppar är färdiga!"
      - service: tts.google_say
        entity_id:
          # - media_player.bedroom_speaker
          #- media_player.nesthub_kitchen
          - media_player.hobbyroom_speaker
        data_template:
          message: "Kaffet är klart"
          language: sv
  
  - alias: 'coffee: autostart'
    id: a740c72b-a019-48d9-9425-1e6dcc608cf3
    trigger:
      platform: template
      value_template: "{{ states('sensor.time') == states('input_datetime.coffee_start')[0:5] }}"
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: binary_sensor.water_coffeemaker
          state: 'on'
        - condition: state
          entity_id: input_boolean.coffee_autostart
          state: 'on'
    action:
      - service: switch.turn_on
        entity_id: switch.coffee_maker_switch
      - delay: '00:00:01'
      - service: switch.turn_off
        entity_id: switch.coffee_maker_switch
      - service: notify.mobile_app_oneplus_8t
        data:
          title: "Coffee maker"
          message: "making coffee"
  
  - alias: 'coffee: auto turn off switch'
    id: db86b221-4ea1-4d6b-8713-69a00e48f284
    trigger:
      platform: state
      entity_id: switch.coffee_maker_switch
      to: 'on'
      for:
        seconds: 2
    action:
      - service: switch.turn_off
        entity_id: switch.coffee_maker_switch

  - alias: 'coffee: time of start brewing'
    id: d5312d00-17e5-4f7d-9549-8fb6f40d1d9f
    trigger:
      platform: state
      entity_id: sensor.coffee_state
      to: 'making'
    action:
      service: input_datetime.set_datetime
      data:
        entity_id: input_datetime.coffee_brewing_start
        timestamp: '{{ now().timestamp() }}'

  - alias: 'coffee: counter'
    id: b23582b2-077a-4334-a9e7-3a752617bcca
    trigger:
      platform: state
      entity_id: sensor.coffee_state
      from: 'making'
      # for: '00:00:10' 
    action:
      # - service: input_number.set_value
      #   data_template:
      #     entity_id: input_number.coffeecups_last
      #     value: "{{ ((as_timestamp(now())-as_timestamp(states.sensor.coffee_state.last_changed))/37)|round(0) }}" # 37 = average time for each cup in seconds 
      - service: input_number.set_value
        data_template:
          entity_id: input_number.coffeecups_last
          value: "{{ ((as_timestamp(now())-as_timestamp(states.input_datetime.coffee_brewing_start.state))/35)|round(0) }}" # 35 = average time for each cup in seconds 
      - service: counter.configure
        data_template:
          entity_id:
            - counter.coffeecups_day
            - counter.coffeecups_week
            - counter.coffeecups_month
            - counter.coffeecups_total
          step: "{{ states('input_number.coffeecups_last')|int }}"
      - service: counter.increment
        entity_id:
          - counter.coffeecups_day
          - counter.coffeecups_week
          - counter.coffeecups_month
          - counter.coffeecups_total

  - alias: 'Coffee: reset daily'
    id: 06e268ab-f399-4934-9003-3bfb2b51c12f
    trigger:
      platform: time
      at: '00:00'
    action:
      service: counter.reset
      entity_id: counter.coffeecups_day

  - alias: 'Coffee: reset weekly'
    id: 95ab584a-968d-4630-9818-3de72153a5ac
    trigger:
      platform: time
      at: '00:00'
    condition:
      condition: time
      weekday: mon
    action:
      service: counter.reset
      entity_id: counter.coffeecups_week

  - alias: 'Coffee: reset monthly'
    id: 1c828a95-2ad3-4d3e-839e-ebf660b44166
    trigger:
      platform: time
      at: '00:00'
    condition:
      condition: template
      value_template: "{{ now().strftime('%d')  == '01' }}"
    action:
      service: counter.reset
      entity_id: counter.coffeecups_month
